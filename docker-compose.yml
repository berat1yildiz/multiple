version: '3.8'

services:
  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    container_name: vue-webapp
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - api
    environment:
      - VUE_APP_API_URL=http://api:5000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    ports:
      - "5000:5000"
    networks:
      - app-network
    depends_on:
      - mongo
      - redis
    environment:
      MONGODB_URI: mongodb://mongo:27017/mydb
      REDIS_HOST: redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s

  mongo:
    image: mongo:latest
    container_name: mongo
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s

  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - app-network
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    networks:
      - app-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - webapp
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s

volumes:
  mongo-data:
  redis-data:

networks:
  app-network:
    driver: bridge
